<?php
namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;


/**
 * @ORM\Entity
 * @ORM\Table(name="`protein`")
 */
class Protein
{
	/**
	 * @ORM\Id
	 * @ORM\Column(type="integer")
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	protected $id;
	

	
    /**
     * @var \Doctrine\Common\Collections\ArrayCollection|Organism[]
     * @ORM\ManyToMany(targetEntity="Organism", mappedBy="proteins")
     */

	public $organisms;
	
   /**
     * @ORM\OneToMany(targetEntity="Domain", mappedBy="protein")
     */
	public $domains;
	
   /**
     * @ORM\OneToMany(targetEntity="Identifier", mappedBy="protein")
     */
    public $identifiers;
	
   /**
     * @ORM\OneToMany(targetEntity="Interaction", mappedBy="protein")
     */
    public $interactions;
    
    /**
     * @ORM\OneToMany(targetEntity="External_Link", mappedBy="protein")
     */
    public $external_links;
    
    
	public function __construct() {
		$this->interactions = new \Doctrine\Common\Collections\ArrayCollection();
		$this->domains = new \Doctrine\Common\Collections\ArrayCollection();
		$this->identifiers = new \Doctrine\Common\Collections\ArrayCollection();
		$this->organisms = new \Doctrine\Common\Collections\ArrayCollection();
		$this->external_links = new \Doctrine\Common\Collections\ArrayCollection();
	}
	
	/**
	 * @ORM\Column(type="string", length=100, nullable=true)
	 */
	protected $name;
	
	/**
	 * @ORM\Column(type="string", length=100, nullable=true)
	 */
	protected $sequence;
	
	/**
	 * @ORM\Column(type="string", length=100, nullable=true)
	 */
	protected $gene_name;
	
	/**
	 * @ORM\Column(type="string", length=100, nullable=true)
	 */
	protected $description;
	
	

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Protein
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set sequence
     *
     * @param string $sequence
     * @return Protein
     */
    public function setSequence($sequence)
    {
        $this->sequence = $sequence;

        return $this;
    }

    /**
     * Get sequence
     *
     * @return string 
     */
    public function getSequence()
    {
        return $this->sequence;
    }

    /**
     * Set gene_name
     *
     * @param string $geneName
     * @return Protein
     */
    public function setGeneName($geneName)
    {
        $this->gene_name = $geneName;

        return $this;
    }

    /**
     * Get gene_name
     *
     * @return string 
     */
    public function getGeneName()
    {
        return $this->gene_name;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return Protein
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Add interactions
     *
     * @param \AppBundle\Entity\Interaction $interactions
     * @return Protein
     */
    public function addInteraction(\AppBundle\Entity\Interaction $interactions)
    {
        $this->interactions[] = $interactions;

        return $this;
    }

    /**
     * Remove interactions
     *
     * @param \AppBundle\Entity\Interaction $interactions
     */
    public function removeInteraction(\AppBundle\Entity\Interaction $interactions)
    {
        $this->interactions->removeElement($interactions);
    }

    /**
     * Get interactions
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getInteractions()
    {
        return $this->interactions;
    }

    /**
     * Add organisms
     *
     * @param \AppBundle\Entity\Organism $organisms
     * @return Protein
     */
    public function addOrganism(\AppBundle\Entity\Organism $organisms)
    {
        $this->organisms[] = $organisms;

        return $this;
    }

    /**
     * Remove organisms
     *
     * @param \AppBundle\Entity\Organism $organisms
     */
    public function removeOrganism(\AppBundle\Entity\Organism $organisms)
    {
        $this->organisms->removeElement($organisms);
    }

    /**
     * Get organisms
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getOrganisms()
    {
        return $this->organisms;
    }

    /**
     * Add domains
     *
     * @param \AppBundle\Entity\Domain $domains
     * @return Protein
     */
    public function addDomain(\AppBundle\Entity\Domain $domains)
    {
        $this->domains[] = $domains;

        return $this;
    }

    /**
     * Remove domains
     *
     * @param \AppBundle\Entity\Domain $domains
     */
    public function removeDomain(\AppBundle\Entity\Domain $domains)
    {
        $this->domains->removeElement($domains);
    }

    /**
     * Get domains
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getDomains()
    {
        return $this->domains;
    }

    /**
     * Add identifiers
     *
     * @param \AppBundle\Entity\Identifier $identifiers
     * @return Protein
     */
    public function addIdentifier(\AppBundle\Entity\Identifier $identifiers)
    {
        $this->identifiers[] = $identifiers;

        return $this;
    }

    /**
     * Remove identifiers
     *
     * @param \AppBundle\Entity\Identifier $identifiers
     */
    public function removeIdentifier(\AppBundle\Entity\Identifier $identifiers)
    {
        $this->identifiers->removeElement($identifiers);
    }

    /**
     * Get identifiers
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getIdentifiers()
    {
        return $this->identifiers;
    }
}
